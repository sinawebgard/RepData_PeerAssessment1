strsplit("سلام من سینا هستم", split = " ")
install.packages("farsi")
library(farsi)
as.character.farsi("سیناسلام")
as.character.farsi(c(1,2,3))
as.farsi(c(1, 2, 3))
as.numeric.farsi(c(1, 2, 3))
as.farsi(1) + 2
x <- strsplit("سینا هستم و اینجا ", split = " ")
x
order(x)
sort(x)
class(x)
x <- as.character(strsplit("سینا هستم و اینجا ", split = " "))
x
farsi(x)
print(x)
rm(x)
x <- rnorm(100)
y <- rnomr(100)
y <- rnorm(100)
identical(x, y)
x = y
y <- rnorm(100)
x == y
x <- rpois(100, 10)
y <- rpois(100, 10)
x == y
sum (x == y)
which(x==y)
?sample
sample(3, 100)
x <- sample(11, 100, replace = TRUE)
y <- sample(11, 100, replace = TRUE)
sum(x == y)
y <- sample(25, 100, replace = TRUE)
y <- sample(25, 100, replace = TRUE)
x <- sample(25, 100, replace = TRUE)
sum(x == y)
x <- sample(25, 11)
x
?rep
class(x)
as.list(x)
x <- as.list(x)
y <- rep(x, 10)
y
?sample
x <- vector(mode = "integer")
rm(y)
for(i in 1:10) {}
for(i in 1:10) {
x[i] <- sample(25, 11)
}
for(i in 1:10) {
x[i] <- sample(25, 11)
}
sample(25, 11)
x[1] <- sample(25, 11)
x
for(i in 1:10) {
x[i] <- sample(25, 11)
}
length(x)
x
x <- list()
for(i in 1:10) {
x[i] <- sample(25, 11)
}
x
for(i in 1:10){x[i] <- i}
x
for(i in 1:10){x[i] <- sample(2,1)}
x
for(i in 1:10){x[i] <- sample(25,11)}
x
x <- list()
p <- vector()
for(i in 1:10){p <- sample(2, 1)
x <- c(x, v)}
x <- c(x, p)}
for(i in 1:10){p <- sample(2, 1)
x <- c(x, p)}
x
for(i in 1:10){p <- sample(25, 11)
x <- c(x, p)
}
x
rm(x, i, p)
x <- list()
y <- list)
y <- list()
for (i in 1:10)
{
y <- sample(25, 11)
x <- list(c(x, y))
}
x
dim(x)
class(y)
class(x)
x <- list()
y <- list()
for (i in 1:10)
{
y <- as.list(sample(25, 11))
x <- c(x, y)
}
x[1]
x[2]
y
x[1][12]
x[1][11]
x[1][02]
for (i in 1:10)
{
y <- as.list(sample(25, 11))
x[[i]] <- y
}
x
for (i in 1:10)
{
y <- as.list(sample(25, 11))
y <- sample(25, 11)
x <- c(x, list(y))
}
?append
?lappend
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
selections
selections[[5]]
source('~/.active-rstudio-document')
selections
rm(selections, team)
source('~/.active-rstudio-document')
selections
unique(selections)
length(unique(selections))
source('~/.active-rstudio-document')
length(unique(selections))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
selections <- list()
team <- list()
for (i in 1:5000) {
team <- as.list(sample(25,11))
selections <- c(selections, list(team))
}
length(unique(selections))
install.packages("leaflet")
library(leaflet)
leaflet()
setView(51, 35)
setView(51, 35.7)
setView(51.0, 35.7)
setView(lat=51.0, long=35.7)
setView(lat=51.0, lon=35.7)
setView(lng = 35, lat = 51)
setView(lng = 35, lat = 51, zoom = 13)
setView(Tehran, lng = 35, lat = 51, zoom = 13)
setView("Tehran", lng = 35, lat = 51, zoom = 13)
?setView
Tehran <- leaflet()
setView(Tehran, lng = 35, lat = 51, zoom = 13)
setView(Tehran, lng = 51, lat = 35, zoom = 13)
addTiles()
addTiles(Tehran)
setView(Tehran, lng = 51, lat = 35, zoom = 13)
addTiles(Tehran)
setView(Tehran, lng = 35, lat = 51, zoom = 13)
addTiles(Tehran)
SFmap <- leaflet() %>%
addTiles() %>%
setView(-122.42, 37.78, zoom = 13) %>%
addMarkers(-122.42, 37.78, popup = 'Bay Area')
SFmap
SFmap <- leaflet() %>%
addTiles() %>%
setView(51, 35, zoom = 13) %>%
SFmap
SFmap <- leaflet() %>%
addTiles() %>%
setView(51, 35, zoom = 13) %>%
SFmap
SFmap <- leaflet() %>%
addTiles() %>%
setView(51, 35, zoom = 13)
SFmap <- leaflet() %>%
addTiles() %>%
setView(51.7, 35, zoom = 13)
SFmap
SFmap <- leaflet() %>%
addTiles() %>%
setView(35, 51, zoom = 13)
SFmap
SFmap <- leaflet() %>%
addTiles() %>%
setView(51.4, 35.7, zoom = 13)
SFmap
Tehran <- leaflet() %>%
addTiles() %>%
setView(51.4, 35.7 zoom = 10)
addTiles() %>%
setView(51.4, 35.7, zoom = 10)
Tehran <- leaflet() %>%
addTiles() %>%
setView(51.4, 35.7, zoom = 10)
Tehran
Tehran <- leaflet() %>%
addTiles() %>%
setView(51.4, 35.7, zoom = 12)
Tehran
addMarkers(Tehran, 51.5, 35.8, popup = "خانه")
Tehran
addMarkers(Tehran, 51.4, 35.7, popup = "خانه")
Tehran
getwd()
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp)
unzip(temp)
dir()
dat <- read.csv("activity.csv")
names(dat)
table(dat$interval)
2355/5
2355*5
11775/60
196.25/24
timestamps <- paste(sprintf("%02g", as.integer(x/100)),
sprintf("%02g", ((x / 100 - as.integer(x/100)) * 100)),
sep=":")})
timestamps <- paste(sprintf("%02g", as.integer(x/100)),
sprintf("%02g", ((x / 100 - as.integer(x/100)) * 100)),
sep=":")})
df$interval <-
sapply(df$interval,
function(x) {
paste(sprintf("%02g", as.integer(x/100)),
sprintf("%02g", ((x / 100 - as.integer(x/100)) * 100)),
sep=":")})
timestamps <-
sapply(df$interval,
function(x) {
paste(sprintf("%02g", as.integer(x/100)),
sprintf("%02g", ((x / 100 - as.integer(x/100)) * 100)),
sep=":")})
dat$interval <-
sapply(dat$interval,
function(x) {
paste(sprintf("%02g", as.integer(x/100)),
sprintf("%02g", ((x / 100 - as.integer(x/100)) * 100)),
sep=":")})
dat$interval <- as.POSIXct(dat$interval)
head(dat$interval)
?as.POSIXct
x <- as.POSIXlt(dat$interval, "%H:%M")
table(dat$interval)
steps_interval <- aggregate(steps ~ interval)
steps_interval <- aggregate(steps ~ interval, dat, mean)
names(steps_interval)
head(steps_interval)
plot(steps_interval, type = "l")
plot(steps_interval, type = "l", xlab= "interval")
class(dat_intervals)
class(dat$intervals)
class(dat$interval)
as.integer(dat$interval)
dat <- df
rm(dat)
df <- read.csv("activity.csv")
df$interval <-
sapply(df$interval,
function(x) {
paste(sprintf("%02g", as.integer(x/100)),
sprintf("%02g", ((x / 100 - as.integer(x/100)) * 100)),
sep="")})
class(dat$interval)
class(df$interval)
steps_interval <- aggregate(steps ~ interval, df, mean)
plot(steps_interval, type = "l")
?par
plot(steps_interval, type = "l", xaxt = "n")
axis(1, at= c(1:5), labels = c("00:00", "05:00", "10:00", "15:00", "20:00"))
axis(1, at= 1:5, labels = c("00:00", "05:00", "10:00", "15:00", "20:00"))
plot(steps_interval, type = "l", xaxt = "n")
plot(steps_interval, type = "l", xaxt = "n", yaxt = "n")
axis(2, at= 1:5, labels = c("00:00", "05:00", "10:00", "15:00", "20:00"))
?axis
plot(steps_interval, type = "l", xaxt = "n", yaxt = "n")
axis(xaxp = c("00:00", "05:00", "10:00", "15:00", 20:00))
axis(1, xaxp = c("00:00", "05:00", "10:00", "15:00", 20:00))
axis(1, xaxp = c("00:00", "05:00", "10:00", "15:00", "20:00"))
timestamps <- steps_interval$interval
timestamps <- paste(timestamps, "1381", sep = "")
names(df$interval) <- timestamps
steps_interval <- aggregate(steps ~ interval, df, mean)
plot(steps_interval, type="l")
names(steps_interval$interval) <- timestamps
plot(steps_interval, type="l")
plot(steps_interval, type="l", xaxt = "n")
axis(1, 1:5)
par(new = T)
plot(steps_interval, type="l", xaxt = "n")
par(new = F)
plot(steps_interval, type="l", xaxt = "n")
axis(1, at=1:5)
par(new = F)
plot(steps_interval, type="l", xaxt = "n", yaxt = "n")
axis(1, at=1:5)
par(new = F)
plot(steps_interval, type="l", xaxt = "n", yaxt = "n")
axis(1, at=1:5, labels = c("a", "f", "g", "p", "l"))
axis(1, at=1:3, labels = c("a", "f", "g", "p", "l"))
axis(1, at=1:3, labels = c("a", "f", "g"))
par(new = F)
plot(steps_interval, type="l")
class(steps_interval$interval)
steps_interval$interval <- as.factor(steps_interval$interval)
plot(steps_interval, type = "l")
df <- read.csv("activity.csv")
df$date <- as.Date(df$date)
df$interval <-
sapply(df$interval,
function(x) {
paste(sprintf("%02g", as.integer(x/100)),
sprintf("%02g", ((x / 100 - as.integer(x/100)) * 100)),
sep=":")})
head(df$date)
?POSIXlt
strptime(df$interval)
?strptime
timestamps <- strptime(df$interval, format = "%H:%M")
df$interval <- timestamps
steps_interval <- aggregate(steps ~ interval, df, mean)
steps_interval <- aggregate(steps ~ interval, df, mean)
class(df$interval)
steps_interval <- aggregate(steps ~ as.integer(interval), df, mean)
steps_interval <- aggregate(steps ~ unclass(interval), df, mean)
unclass(df$interval)
df <- read.csv("activity.csv")
df$time <- timestamps
steps_interval <- aggregate(steps ~ interval, df, mean)
plot(steps_interval, unique(df$time))
plot(steps_interval$steps, unique(df$time), type = "l")
plot(unique(df$time), steps_interval$steps, type = "l")
?par
plot(unique(df$time), steps_interval$steps, type = "l", xaxs = "r")
timestamps <- as.character(timestamps)
plot(unique(df$time), steps_interval$steps, type = "l")
plot(unique(df$time), steps_interval$steps, type = "l", xlab ="")
plot(unique(df$time), steps_interval$steps+1, type = "l", xlab ="")
plot(unique(df$time), steps_interval$steps+12, type = "l", xlab ="")
plot(unique(df$time)+1, steps_interval$steps, type = "l", xlab ="")
plot(unique(df$time)+6, steps_interval$steps, type = "l", xlab ="")
plot(unique(df$time)+9, steps_interval$steps, type = "l", xlab ="")
?lubridate
library(lubridate)
df <- read.csv("activity.csv")
df$interval <-
sapply(df$interval,
function(x) {
paste(sprintf("%02g", as.integer(x/100)),
sprintf("%02g", ((x / 100 - as.integer(x/100)) * 100)),
sep=":")})
?"lubridate"
timestamps <- hm(df$interval)
head(timestamps)
class(timestamps)
plot(unique(timestamps), steps_interval$steps, type = "l", xlab ="")
sum(unique(timestamps))
tail(timestamps)
df$interval <- timestamps
table(df$interval)
df$interval
plot(df$steps, df$interval)
x <- period_to_seconds(df$interval)
head(x)
df$interval <- x
steps_interval <- aggregate(steps ~ interva, df, mean)
steps_interval <- aggregate(steps ~ interval, df, mean)
plot(steps_interval)
steps_interval(period(steps_interval$interval))
steps_interval<- period(steps_interval$interval))
steps_interval<- period(steps_interval$interval)
?seconds_to_period
steps_interval <- seconds_to_period(steps_interval$interval)
plot(steps_interval, type = "l")
steps_interval <- period_to_seconds(steps_interval$interval)
steps_interval <- aggregate(steps ~ interval, df, mean)
plot(steps_interval, type = "l")
plot(steps_interval, type = "l", xaxt = "n")
axis(1, 1:5, seconds_to_period(steps_interval$interval))
x <- seconds_to_period(steps_interval$interval)
?quantile
quantile(x, probs = (0, 5/24, 10/24, 15/24, 20/24))
quantile(x, probs = c(0, 5/24, 10/24, 15/24, 20/24))
quantile(steps_interval$interval, probs = c(0, 5/24, 10/24, 15/24, 20/24))
y <- quantile(steps_interval$interval, probs = c(0, 5/24, 10/24, 15/24, 20/24))
seconds_to_period(y)
y <- quantile(steps_interval$interval, probs = seq(0, 1, 0.2))
seconds_to_period(y)
y <- quantile(steps_interval$interval, probs = seq(0, 1, 0.25))
seconds_to_period(y)
y <- quantile(steps_interval$interval, probs = c(0, 5/23, 10/23, 15/23, 20/23))
seconds_to_period(y)
y <- quantile(steps_interval$interval, probs = c(0, 5/235959, 10/235959, 15/235959, 20/235959))
y <- quantile(steps_interval$interval, probs = c(0, 50000/235959, 100000/235959, 150000/235959, 200000/235959))
seconds_to_period(y)
rm(list=ls())
df <- fread("activity.csv")
df <- read.csv("activity.csv")
tint <- paste(sprintf(%2, as.integer(df$interval/100)), )
tint <- paste(sprintf(%2, as.integer(df$interval/100)),
tint <- paste(sprintf(%2, as.integer(df$interval/100)),
sprintf(%2, as.ineger((df$interval/100 - as.ineger(df$interval/100))*100), sep = ":")
hint <- sprintf(%2, as.integer(df$interval/100))
?sprintf
hint <- sprintf("%2g", as.integer(df$interval/100))
mint <- sprintf("%2g", (df$interval/100 - hint) * 100)
mint <- sprintf("%2g", (df$interval/100 - hint)*100)
mint <- sprintf("%2g", as.integer(df$interval/100 - hint)*100)
df$interval <-
sapply(df$interval,
function(x) {
paste(sprintf("%02g", as.integer(x/100)),
sprintf("%02g", ((x / 100 - as.integer(x/100)) * 100)),
sep=":")})
tint <- hm(df$interval)
tintsec <- period_to_seconds(tint)
steps_int <- aggregate(df$interval ~ tintsec, mean)
df$tintsec <- tintsec
df$tint <- tint
stepsint <- aggregate(steps ~ tintsec)
stepsint <- aggregate(steps ~ tintsec, df, mean)
plot(stepstint, type="l", xtsx ="n")
plot(stepsint, type="l", xtsx ="n")
plot(stepsint, type="l", xaxp = c("00:00", "05:00", "10:00", "15:00", "20:00"))
plot(stepsint, type="l", xaxt = "N")
plot(stepsint, type="l", xaxt = "n")
axis(1, at= 1:5, xaxp = c("00:00", "05:00", "10:00", "15:00", "20:00"))
axis(1, at= 1:5, xaxp = c("00:00", "05:00", "10:00", "15:00", "20:00"))
axis(1, at= 1:5, labbels = c("00:00", "05:00", "10:00", "15:00", "20:00"))
axis(1, at= 1:5, labels = c("00:00", "05:00", "10:00", "15:00", "20:00"))
axis(1, at= 1:5, labels = c("00:00", "05:00", "10:00", "15:00", "20:00"))
plot(stepsint, type="l", xaxt = "n")
axis(1, at= 1:5, labbels = c("a", "b", "c", "d", "e"))
axis(1, at= 1:5, labels = c("a", "b", "c", "d", "e"))
axis(1, at= 1:5, labels = c("a", "b", "c", "d", "e"))
axis(1, at= 1:5, labels = c("a", "b", "c", "d", "e"))
plot(stepsint, type="l", xaxt = "n")
plot(stepsint, type="l", xaxt = "n")
axis(1, at= 1:5, labels = c("a", "b", "c", "d", "e"))
axis(1, at= 1:5, labels = letters[1:5])
plot(stepsint, type="l", xaxt = "n")
axis(1, at= 1:5, labels = letters[1:5])
plot(steptsint$steps, tint, ttype = "l")
plot(stepsint$steps, tint, ttype = "l")
length(tint)
rm(hint)
head(tint)
x <- aggregate(steps, tint, df, mean)
x <- aggregate(step, tint, df, mean)
class(tint)
tint@.Data
head(tint@.Data)
head(tint@minute)
head(tint@hour)
setwd("Coursera")
dir()
setwd("RepData_PeerAssessment1")
dir()
# Peer Assessment Assignment '#'1
df <- read.csv("activity.csv")
head(df)
tail(df)
Sys.time()
?round
as.integer(0.9)
is.na(df)
sum(is.na(df))
sum(is.na(df$steps))
names(df)
